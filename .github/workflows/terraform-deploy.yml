name: Terraform Deploy (Single Code, Dynamic Inputs)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select Environment"
        required: true
        default: dev
        type: choice
        options:
          - dev
          - test
          - production

      region:
        description: "Select Azure Region"
        required: true
        default: eastus
        type: choice
        options:
          - eastus
          - westeurope
          - centralus

jobs:
  terraform:
    name: Deploy to ${{ matrix.env_name }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env_name: [dev, test, production]

    environment: ${{ matrix.env_name }}

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Skip unless environment matches input
        if: ${{ matrix.env_name != github.event.inputs.environment }}
        run: echo "Skipping: matrix env '${{ matrix.env_name }}' does not match selected environment '${{ github.event.inputs.environment }}'"
        
      - name: Checkout code
        if: ${{ matrix.env_name == github.event.inputs.environment }}
        uses: actions/checkout@v3

      - name: Setup Terraform
        if: ${{ matrix.env_name == github.event.inputs.environment }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        if: ${{ matrix.env_name == github.event.inputs.environment }}
        run: terraform init
        working-directory: ./envs

      - name: Terraform Validate
        if: ${{ matrix.env_name == github.event.inputs.environment }}
        run: terraform validate
        working-directory: ./envs

      - name: Terraform Plan
        if: ${{ matrix.env_name == github.event.inputs.environment }}
        run: terraform plan -input=false -var="environment=${{ matrix.env_name }}" -var="location=${{ github.event.inputs.region }}"
        working-directory: ./envs

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && matrix.env_name == github.event.inputs.environment }}
        run: terraform apply -auto-approve -input=false -var="environment=${{ matrix.env_name }}" -var="location=${{ github.event.inputs.region }}"
        working-directory: ./envs
